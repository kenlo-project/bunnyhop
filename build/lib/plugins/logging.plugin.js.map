{"version":3,"sources":["../../../src/lib/plugins/logging.plugin.js"],"names":["LoggingPlugin","pluginAPI","log","getPluginLogger","info","send","next","routingKey","message","options","listen","listenFn","logPassThrough","msg","ret","content","consumeReturnVal","consumerTag","publish","subscribe","subscribeFn","module","exports"],"mappings":";;;;AAAA;;;;AAIA,SAASA,aAAT,CAAwBC,SAAxB,EAAmC;AACjC,QAAMC,MAAMD,UAAUE,eAAV,EAAZ;AACAD,MAAIE,IAAJ,CAAS,sBAAT;;AAEA,SAAO;AACLC,UAAMC,QACJ,CAACC,UAAD,EAAaC,OAAb,EAAsBC,OAAtB,KAAkC;AAChCP,UAAIE,IAAJ,CAAU,uBAAsBG,UAAW,GAA3C,EAA+CC,OAA/C;AACA,aAAOF,KAAKC,UAAL,EAAiBC,OAAjB,EAA0BC,OAA1B,CAAP;AACD,KALE;AAMLC,YAAQJ;AAAA,mCACN,WAAOC,UAAP,EAAmBI,QAAnB,EAA6BF,OAA7B,EAAyC;AACvC,iBAASG,cAAT,CAAyBC,GAAzB,EAA8B;AAC5B,gBAAMC,MAAMH,SAASE,GAAT,CAAZ;AACA;AACAX,cAAIE,IAAJ,CAAU,wBAAuBG,UAAW,cAA5C,EAA2DM,IAAIE,OAA/D;AACA,iBAAOD,GAAP;AACD;;AAED,cAAME,mBAAmB,MAAMV,KAAKC,UAAL,EAAiBK,cAAjB,EAAiCH,OAAjC,CAA/B;AACAP,YAAIE,IAAJ,CAAU,YAAWY,iBAAiBC,WAAY,wCAAuCV,UAAW,GAApG;AACA,eAAOS,gBAAP;AACD,OAZK;;AAAA;AAAA;AAAA;AAAA,QANH;AAmBLE,aAASZ,QACP,CAACC,UAAD,EAAaC,OAAb,EAAsBC,OAAtB,KAAkC;AAChCP,UAAIE,IAAJ,CAAU,0BAAyBG,UAAW,GAA9C,EAAkDC,OAAlD;AACA,aAAOF,KAAKC,UAAL,EAAiBC,OAAjB,EAA0BC,OAA1B,CAAP;AACD,KAvBE;AAwBLU,eAAWb,QACT,CAACC,UAAD,EAAaa,WAAb,EAA0BX,OAA1B,KAAsC;AACpC,eAASG,cAAT,CAAyBC,GAAzB,EAA8B;AAC5B,cAAMC,MAAMM,YAAYP,GAAZ,CAAZ;AACA;AACAX,YAAIE,IAAJ,CAAU,wBAAuBG,UAAW,iBAA5C,EAA8DM,IAAIE,OAAlE;AACA,eAAOD,GAAP;AACD;AACD,aAAOR,KAAKC,UAAL,EAAiBK,cAAjB,EAAiCH,OAAjC,CAAP;AACD;AAjCE,GAAP;AAmCD;;AAEDY,OAAOC,OAAP,GAAiBtB,aAAjB","file":"logging.plugin.js","sourcesContent":["/**\n * Created by balmasi on 2017-06-02.\n */\n\nfunction LoggingPlugin (pluginAPI) {\n  const log = pluginAPI.getPluginLogger();\n  log.info('Using Logging Plugin');\n\n  return {\n    send: next =>\n      (routingKey, message, options) => {\n        log.info(`  [>] sending %j to ${routingKey}.`, message);\n        return next(routingKey, message, options);\n      },\n    listen: next =>\n      async (routingKey, listenFn, options) => {\n        function logPassThrough (msg) {\n          const ret = listenFn(msg);\n          // We have to place this log after listenFn cause it contains our deserialization logic\n          log.info(`  [<] received %j on ${routingKey} via listen.`, msg.content);\n          return ret;\n        }\n\n        const consumeReturnVal = await next(routingKey, logPassThrough, options);\n        log.info(`Consumer ${consumeReturnVal.consumerTag} waiting for commands on routing key ${routingKey}.`);\n        return consumeReturnVal;\n      },\n    publish: next =>\n      (routingKey, message, options) => {\n        log.info(`  [>] publishing %j to ${routingKey}.`, message);\n        return next(routingKey, message, options);\n      },\n    subscribe: next =>\n      (routingKey, subscribeFn, options) => {\n        function logPassThrough (msg) {\n          const ret = subscribeFn(msg);\n          // We have to place this log after subscribeFn cause it contains our deserialization logic\n          log.info(`  [<] received %j on ${routingKey} via subscribe.`, msg.content);\n          return ret;\n        }\n        return next(routingKey, logPassThrough, options);\n      }\n  }\n}\n\nmodule.exports = LoggingPlugin;"]}