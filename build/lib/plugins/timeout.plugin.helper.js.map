{"version":3,"sources":["../../../src/lib/plugins/timeout.plugin.helper.js"],"names":["getRejectedPromiseIfTimedOut","timeoutMs","Promise","resolve","reject","setTimeout","TimeoutError","Error","constructor","args","captureStackTrace","module","exports"],"mappings":";;AAAA;;;;;;;;AAQA,SAASA,4BAAT,CAAuCC,SAAvC,EAAkD;AAChD,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KACjBC,WAAW,MAAMD,OAAO,IAAIE,YAAJ,CAAiB,sBAAjB,CAAP,CAAjB,EAAmEL,SAAnE,CADK,CAAP;AAGD;;AAGD,MAAMK,YAAN,SAA2BC,KAA3B,CAAiC;AAC/BC,cAAY,GAAGC,IAAf,EAAqB;AACnB,UAAM,GAAGA,IAAT;AACAF,UAAMG,iBAAN,CAAwB,IAAxB,EAA8BJ,YAA9B;AACD;AAJ8B;;AAOjCK,OAAOC,OAAP,GAAiB;AACfN,cADe;AAEfN;AAFe,CAAjB","file":"timeout.plugin.helper.js","sourcesContent":["/**\n * adds timeout functionality to functions by\n * wrapping a given function with a promise which rejects if the function doesn't\n * return or resolve within timeoutMs milliseconds\n *\n * @param {number} timeoutMs - milliseconds to wait before rejecting calls\n * @returns {function(...[*]): Promise.<*>}\n */\nfunction getRejectedPromiseIfTimedOut (timeoutMs) {\n  return new Promise((resolve, reject) =>\n    setTimeout(() => reject(new TimeoutError('Operation Timed Out.')), timeoutMs)\n  );\n}\n\n\nclass TimeoutError extends Error {\n  constructor(...args) {\n    super(...args);\n    Error.captureStackTrace(this, TimeoutError)\n  }\n}\n\nmodule.exports = {\n  TimeoutError,\n  getRejectedPromiseIfTimedOut\n};"]}