{"version":3,"sources":["../../../src/lib/plugins/timeout.plugin.js"],"names":["getRejectedPromiseIfTimedOut","require","timeoutMiddleware","next","routingKey","message","options","originalCallPromise","shouldRaceTimeout","sync","timeoutMs","Promise","race","module","exports","TimeoutPlugin","pluginAPI","log","getPluginLogger","info","send"],"mappings":";;AAAA,MAAM,EAAEA,4BAAF,KAAmCC,QAAQ,yBAAR,CAAzC;;AAGA;;;;;AAKA,MAAMC,oBAAoBC,QAAQ,CAACC,UAAD,EAAaC,OAAb,EAAsBC,OAAtB,KAAkC;AAClE,QAAMC,sBAAsBJ,KAAKC,UAAL,EAAiBC,OAAjB,EAA0BC,OAA1B,CAA5B;AACA,QAAME,oBAAoBF,WAAWA,QAAQG,IAAnB,IAA2BH,QAAQI,SAA7D;AACA;AACA,SAAOF,oBACLG,QAAQC,IAAR,CAAa,CAACL,mBAAD,EAAsBP,6BAA6BM,QAAQI,SAArC,CAAtB,CAAb,CADK,GAELH,mBAFF;AAGD,CAPD;;AASAM,OAAOC,OAAP,GAAiB,SAASC,aAAT,CAAwBC,SAAxB,EAAmC;AAClD,QAAMC,MAAMD,UAAUE,eAAV,EAAZ;AACAD,MAAIE,IAAJ,CAAS,uBAAT;AACA,SAAO;AACLC,UAAOlB;AADF,GAAP;AAGD,CAND","file":"timeout.plugin.js","sourcesContent":["const { getRejectedPromiseIfTimedOut } = require('./timeout.plugin.helper');\n\n\n/**\n * The middleware pipeline function following the plugin specification\n * @param {function} next - next function in the pipeline\n * @return {function}\n */\nconst timeoutMiddleware = next => (routingKey, message, options) => {\n  const originalCallPromise = next(routingKey, message, options);\n  const shouldRaceTimeout = options && options.sync && options.timeoutMs;\n  // If timeout option is set we want to race the rpc promise resolution with timeout rejection\n  return shouldRaceTimeout ?\n    Promise.race([originalCallPromise, getRejectedPromiseIfTimedOut(options.timeoutMs)]) :\n    originalCallPromise;\n};\n\nmodule.exports = function TimeoutPlugin (pluginAPI) {\n  const log = pluginAPI.getPluginLogger();\n  log.info('Using Timeout Plugin.');\n  return {\n    send:  timeoutMiddleware,\n  };\n};"]}