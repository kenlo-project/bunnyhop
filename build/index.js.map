{"version":3,"sources":["../src/index.js"],"names":["_","require","debug","Plugins","wrapCompletedHandlers","JsonSerialization","BuiltInPlugins","BuiltInEngines","log","info","error","BunnyHop","serviceName","options","isString","TypeError","defaults","engine","DefaultEngine","url","serialization","connectionManager","ConnectionManager","connectionName","amqpConfig","clientProperties","connection_name","hasCustomEngine","registeredPlugins","pluginManagerPromise","then","channel","connection","pluginManager","initalizePlugins","slice","use","plugin","push","send","routingKey","message","pm","listen","listenFn","listenOptions","handler","onHandlerError","onHandlerSuccess","publish","subscribe","subscribeFn","subscribeOptions","Engines","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Created by balmasi on 2017-05-30.\n */\n\n\nconst _ = require('lodash');\nconst debug = require('debug');\n\nconst Plugins = require('./lib/plugin');\nconst { wrapCompletedHandlers } = require('./lib/util');\nconst JsonSerialization = require('./lib/serialization/json');\nconst BuiltInPlugins = require('./lib/plugins/index');\nconst BuiltInEngines = require('./lib/engines/index');\n\nconst log = {\n  info: debug('bunnyhop:info'),\n  error: debug('bunnyhop:error'),\n  debug: debug('bunnyhop:debug')\n};\n\n\nfunction BunnyHop (serviceName, options = {}) {\n  if (!_.isString(serviceName)) {\n    throw new TypeError('serviceName argument is required');\n  }\n\n  /* Configure default options\n      Note: you can pass in custom options which get exposed through the middleware API\n  */\n  _.defaults(options, {\n    engine: BuiltInEngines.DefaultEngine,\n    url: 'amqp://localhost',\n    serialization: JsonSerialization,\n    connectionManager: BuiltInEngines.DefaultEngine.ConnectionManager\n    /*\n    onHandlerError: fn,\n    onHandlerSuccess: fn\n     */\n  });\n\n  if (options.connectionName) {\n    options.amqpConfig = {\n      clientProperties: {\n        connection_name: options.connectionName\n      }\n    }\n  }\n\n  let hasCustomEngine = options.engine !== BuiltInEngines.DefaultEngine;\n  let registeredPlugins = [options.engine];\n\n  const pluginManagerPromise = options.connectionManager(options.url, options.amqpConfig)\n    .then(({ channel, connection }) => {\n      const pluginManager = Plugins({ channel, connection, options, serviceName });\n      pluginManager.initalizePlugins(registeredPlugins);\n      return pluginManager;\n    });\n\n  return {\n    engine: function engine (engine) {\n      registeredPlugins = [engine, ...registeredPlugins.slice(1)];\n      hasCustomEngine = true;\n      return this;\n    },\n\n    use: function use (plugin) {\n      registeredPlugins.push(plugin);\n      return this;\n    },\n\n    send: async (routingKey, message, options) => {\n      const pm = await pluginManagerPromise;\n      return pm.send(routingKey, message, options)\n    },\n\n    listen: async (routingKey, listenFn, listenOptions) => {\n      const pm = await pluginManagerPromise;\n      const handler = wrapCompletedHandlers(listenFn, options.onHandlerError, options.onHandlerSuccess);\n      return pm.listen(routingKey, handler, listenOptions);\n    },\n\n\n    publish: async (routingKey, message, options) => {\n      const pm = await pluginManagerPromise;\n      return pm.publish(routingKey, message, options)\n    },\n\n    async subscribe (routingKey, subscribeFn, subscribeOptions) {\n      const pm = await pluginManagerPromise;\n      const handler = wrapCompletedHandlers(subscribeFn, options.onHandlerError, options.onHandlerSuccess);\n      return pm.subscribe(routingKey, handler, subscribeOptions);\n    }\n  };\n}\n\n// Expose the built in plugins\nBunnyHop.Plugins = BuiltInPlugins;\nBunnyHop.Engines = BuiltInEngines;\nmodule.exports = BunnyHop;"]}